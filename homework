CRUD Quiz
Use the solution to this afternoon's Property Tracker lab to answer the following questions. Please write your answers under each question, push the file to GitHub, and submit in the usual way.

MVP Questions
In our Property Tracker application:

Q1. Where are we instantiating instances of the Property class?
  .In console.rb.
Q2. Where are we defining the SQL that enables us to save the ruby Property object into the database?
  .In property.rb.
Q3. In console.rb, which lines modify the database?
  .The ones that add, update and delete the database.
Q4. Why do we not define the id of a Property object at the point we instantiate it (‘new it up’)?
  .For security.
Q5. Where and how do we assign the property id (that is generated by the database) to the ruby object?
  .When we are creating the class.
Q6. Why do we put a guard (an ‘if’ clause) on the @id attribute in the constructor?
  .To be sure that there is a value for ID.
Q7. Why are some of the CRUD actions represented by instance methods, and others, class methods?
  .Depends if we need all the details or just one, we need one method or a class methods.
Q8. What type of data structure is returned by db.exec() and db.exec_prepared(), and how do we index into it to pull out a desired attribute?
  . A hash.Trough a hash.
Q9. Why do we use prepared statements when performing database operations?
  .Because we cannot access them else.

Extension Questions
Look at the find_by_id and find_by_address methods in the Property class.

Q10. What do they take in as their arguments?
  .A property from the database we are going to look for
Q11. What are their return values?
  .A class with the information we need.
